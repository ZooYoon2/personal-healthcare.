/**********************************/
/* Table Name: 운동리뷰 */
/**********************************/
DROP TABLE EXERREV CASCADE CONSTRAINTS;

CREATE TABLE EXERREV(
		EXERREV_NO            		NUMBER(10)		 NOT NULL       PRIMARY KEY,
		MEMBERNO                     		NUMBER(10)		 NOT NULL,
		EXERREV_CONTENT               		VARCHAR2(500)		 NULL ,
		EXERREV_DATE          		DATE		 NOT NULL,
		EXERREV_RECOM         		NUMBER(10)		 NOT NULL,
		EXERCISE_NO                   		NUMBER(10)		 NOT NULL,
        FOREIGN KEY (EXERCISE_NO) REFERENCES EXERCISE (EXERCISE_NO),
        FOREIGN KEY (MEMBERNO) REFERENCES MEMBER (MEMBERNO)
);

COMMENT ON TABLE EXERREV is '운동리뷰';
COMMENT ON COLUMN EXERREV.EXERREV_NO is '운동리뷰번호';
COMMENT ON COLUMN EXERREV.MEMBERNO is '회원번호';
COMMENT ON COLUMN EXERREV.EXERREV_CONTENT is '리뷰내용';
COMMENT ON COLUMN EXERREV.EXERREV_DATE is '등록일';
COMMENT ON COLUMN EXERREV.EXERREV_RECOM is '추천점수';
COMMENT ON COLUMN EXERREV.EXERCISE_NO is '운동번호';

DROP SEQUENCE EXERREV_SEQ;

CREATE SEQUENCE EXERREV_SEQ
  START WITH 1                -- 시작 번호
  INCREMENT BY 1            -- 증가값
  MAXVALUE 9999999999  -- 최대값: 9999999999 --> NUMBER(10) 대응
  CACHE 2                        -- 2번은 메모리에서만 계산
  NOCYCLE;                      -- 다시 1부터 생성되는 것을 방지
  
INSERT INTO EXERREV(EXERREV_NO,MEMBERNO,EXERREV_CONTENT,EXERREV_DATE,EXERREV_RECOM,EXERCISE_NO)
VALUES(EXERREV_SEQ.nextval,'1','SO GOOD',sysdate,'10','2');

COMMIT;

-- 전체 목록
SELECT EXERREV_NO,MEMBERNO,EXERREV_CONTENT,EXERREV_DATE,EXERREV_RECOM,EXERCISE_NO
FROM EXERREV
ORDER BY EXERREV_NO ASC;
select * from exercise;
-- 조회
SELECT EXERREV_NO,MEMBERNO,EXERREV_CONTENT,EXERREV_DATE,EXERREV_RECOM,EXERCISE_NO
FROM EXERREV
WHERE EXERREV_NO=1;

-- 수정
UPDATE EXERREV
SET EXERREV_CONTENT='SO NICE',EXERREV_DATE=sysdate,EXERREV_RECOM='8'
WHERE EXERREV_NO=1;

commit;

-- 삭제
DELETE FROM EXERREV
WHERE EXERREV_NO=1;

commit;

-- 레코드 갯수
SELECT COUNT(*) as cnt FROM EXERREV;


